struct A
{
    virtual void f(int x) {} // использование динамического типа 
    // если добавить параметр по умолчанию в А в Б перестанет быть виртуальной; сейчас его нет
    void g(double) {}
    void g(int) {}
};
//хрупкие базовые классы: изменение базового класса может сломать программу
struct B :A
{
    void f(int) override{} // override требует чтобы f была виртуальной; - говорим что дополняем функцию в классе
    void g(int) {}
};

int main(int argc, char const *argv[])
{
    B *b = new B; 
    A *a = new B; //использует статический тип А для определении функций
    a->g(1); //
    a->f(1); //
    return 0;
}